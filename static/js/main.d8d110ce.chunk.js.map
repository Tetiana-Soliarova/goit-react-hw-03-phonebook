{"version":3,"sources":["component/ContactForm/form.module.css","component/Filter/styles.module.css","component/ContactsList/styles.module.css","component/ContactForm/Form.js","component/ContactsList/ContactItem.jsx","component/ContactsList/ContactList.jsx","component/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","hendleNameChange","event","currentTarget","value","setState","hendleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","label","input","type","onChange","Component","ContactItem","id","onDeleteContact","item","onClick","ContactList","contacts","deleteContact","map","Filter","filtr","App","filter","addContact","data","contact","uuidv4","find","alert","prevState","changeFilter","e","visibleTodos","toLowerCase","includes","removeId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","class","style","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8d110ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"form_input__F7hj8\",\"label\":\"form_label__2QfPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"styles_label__2AzIO\",\"filtr\":\"styles_filtr__9YTEA\",\"input\":\"styles_input__3I16T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"styles_item__3ljxk\"};","import { Component } from 'react';\r\nimport styles from './form.module.css'\r\n\r\n\r\nclass ContactForm extends Component{\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n //метод который обновляет состояние\r\n    hendleNameChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n\r\n\r\n    //метод который Submit form\r\n    hendleSubmit = event => {\r\n        event.preventDefault();\r\n    \r\n    /*   const dataRepeat = this.props.contacts.filter(\r\n      contact => contact.name === event.target.elements[0].value,\r\n    );\r\n    if (dataRepeat.length) {\r\n      return alert(`${dataRepeat[0].name} is already in contacts`);\r\n    }\r\n        */\r\n    \r\n        \r\n        this.props.onSubmit(this.state);\r\n        \r\n        this.reset();\r\n    }\r\n\r\n   //очистка форми\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n\r\n   \r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <>\r\n                <form onSubmit={this.hendleSubmit } >\r\n                    <label className={styles.label}> Name \r\n                        <input\r\n                            className={styles.input}\r\n                            name=\"name\"\r\n                            type='text'\r\n                            value={this.state.name}\r\n                            onChange={this.hendleNameChange} />\r\n                    </label>\r\n\r\n                    <label className={styles.label}> Number \r\n                        <input\r\n                            className={styles.input}\r\n                            name=\"number\"   \r\n                            type='tel'\r\n                            value={this.state.number}\r\n                            onChange={this.hendleNameChange} />\r\n                    </label>\r\n                    <button type='submit' >Add contact</button>\r\n                </form>\r\n                \r\n            </>\r\n    )\r\n}\r\n\r\n\r\n\r\n}\r\n\r\nexport default ContactForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst ContactItem = ({ name, number, id, onDeleteContact }) => {\r\n  return (\r\n    <li className={styles.item} key={id}>\r\n      <p>\r\n        {name}: {number}{\" \"}\r\n      </p>\r\n\r\n      <button type=\"button\" onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactItem from \"./ContactItem\";\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => deleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './styles.module.css';\r\n\r\nconst Filter = ({value, onChange}) => {\r\n    return (\r\n     <div className={styles.filtr}>\r\n        <label className={styles.label}>\r\n                Find contacts by name       \r\n          </label>\r\n         <input className={styles.input} type=\"text\" value={value} onChange={onChange} />\r\n            \r\n             \r\n     </div>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import { Component } from 'react'\n//import PropTypes from 'prop-types';\nimport style from './App.css'\nimport { v4 as uuidv4 } from 'uuid'\nimport ContactForm from './component/ContactForm/Form'\nimport ContactList from './component/ContactsList/ContactList'\nimport Filter from './component/Filter/Filter'\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  }\n\n  addContact = (data) => {\n    const contact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    }\n    if (this.state.contacts.find((item) => item.name === data.name)) {\n      alert(`${data.name} is already in contacts`)\n      return\n    }\n\n    this.setState((prevState) => {\n      return {\n        contacts: [contact, ...prevState.contacts],\n      }\n    })\n  }\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value })\n  }\n\n  visibleTodos = () => {\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n    )\n  }\n\n  deleteContact = (removeId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== removeId),\n      }\n    })\n  }\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts')\n    const parsedContacts = JSON.parse(contacts)\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts);\n\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n  }\n\n  render() {\n    const { filter } = this.state\n    return (\n      <div>\n        <h1 class={style.title}>Phonebook</h1>\n        <ContactForm\n          onSubmit={this.addContact}\n          contacts={this.state.contacts}\n        />\n\n        <Filter value={filter} onChange={this.changeFilter} />\n\n        <h2>Contacts</h2>\n\n        <ContactList\n          contacts={this.visibleTodos()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}